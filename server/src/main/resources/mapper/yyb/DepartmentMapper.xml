<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.server.mapper.yyb.DepartmentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zh.server.entity.Department">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="parentId" property="parentId" />
        <result column="depPath" property="depPath" />
        <result column="enabled" property="enabled" />
        <result column="isParent" property="isParent" />
    </resultMap>

    <resultMap id="DepartmentWithChildren" type="com.zh.server.entity.Department" extends="BaseResultMap">
        <!--递归调用，显示所有部门的层级关系。弥补了获取菜单接口的不足-->
        <collection property="children" ofType="com.zh.server.entity.Department"
                    select = "com.zh.server.mapper.yyb.DepartmentMapper.getAllDepartmentsByParentId" column="id">
        </collection>
    </resultMap>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, parentId, depPath, enabled, isParent
    </sql>

    <!--查询所有部门-->
    <select id="getAllDepartmentsByParentId" resultMap="DepartmentWithChildren">
        select
        <include refid="Base_Column_List" />
        from t_department
        where parentId = #{ID}
    </select>

    <!--添加部门
        statementType="CALLABLE"：调用的存储过程
        给实体的result和id赋值，记得在实体类标明-->
    <insert id="addDep" statementType="CALLABLE">
        call addDep(#{dep.name,mode=IN,jdbcType=VARCHAR},#{dep.parentId,mode=IN,jdbcType=INTEGER},#{dep.enabled,mode=IN,jdbcType=BOOLEAN},
        #{dep.result,mode=OUT,jdbcType=INTEGER},#{dep.id,mode=OUT,jdbcType=INTEGER})
    </insert>

    <!--删除部门
        调用存储过程，用select/insert都没啥问题-->
    <insert id="deleteDepartment" statementType="CALLABLE">
        call deleteDepartment(#{dep.id,mode=IN,jdbcType=INTEGER},#{dep.result,mode=OUT,jdbcType=INTEGER})
    </insert>
</mapper>
